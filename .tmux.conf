# ==============================================================================
# Tmux configuration file for a modern, efficient terminal experience.
# ==============================================================================

# Set the default terminal type to support 256 colors.
set-option -g default-terminal "screen-256color"

# Enable true color support for compatible terminals.
set-option -ga terminal-overrides ",xterm:Tc"

# Enable terminal focus events for editor integrations (e.g., Neovim).
set-option -g focus-events on

# Enable mouse support for pane selection, resizing, and scrolling.
set -g mouse on

# =============================================================================
# COPY MODE (VI-style)
# =============================================================================

# Use vi keybindings in copy mode
setw -g mode-keys vi

# Provide strong visual feedback for selection
setw -g mode-style "fg=white,bg=colour238"

# Bind 'v' to begin selection in vi-style
bind -T copy-mode-vi v send-keys -X begin-selection

# --- For macOS ---
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy'
# bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'pbcopy'

# --- For Linux (with xclip) ---
# You might need to install xclip: sudo apt-get install xclip
# Bind 'y' to yank (copy) the selection to the clipboard
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# Bind 'Enter' to also yank the selection (for convenience)
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# --- For Linux remote SSH (OSC 52) ---
# Allows copying to the local clipboard from a remote server.
# Requires a modern terminal on your local machine (e.g., iTerm2, Kitty, Windows Terminal).
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "tmux save-buffer - | base64 | tr -d '\n' | xargs -I {} printf '\e]52;c;{}\a'"
# bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "tmux save-buffer - | base64 | tr -d '\n' | xargs -I {} printf '\e]52;c;{}\a'"

# =============================================================================
# PANE MANAGEMENT
# =============================================================================

# Switch panes using Alt + vim keys without the prefix.
bind -n M-h select-pane -L # Move left
bind -n M-l select-pane -R # Move right
bind -n M-k select-pane -U # Move up
bind -n M-j select-pane -D # Move down

# Resize panes using Alt + Arrow keys without the prefix.
# The -r flag makes the resizing repeatable.
bind -n -r M-Left resize-pane -L 2
bind -n -r M-Right resize-pane -R 2
bind -n -r M-Up resize-pane -U 2
bind -n -r M-Down resize-pane -D 2

# Renumber windows automatically when a window is closed
set-option -g renumber-windows on

# =============================================================================
# STATUS BAR
# =============================================================================
set -g status-position bottom
set -g status-justify left
set -g status-style 'bg=colour235 fg=colour248'

# Current window style
set-window-option -g window-status-current-style 'bg=colour10 fg=colour232 bold'

# Left side: Session name
set -g status-left-length 40
set -g status-left '#[bg=colour22,fg=colour232] #S #[bg=colour235,fg=colour248] '

# Right side: Date and Time
set -g status-right-length 60
set -g status-right '#[fg=colour248,bg=colour235] %A, %d %b %Y | %R '

# Update status bar every 1 second
set -g status-interval 1
